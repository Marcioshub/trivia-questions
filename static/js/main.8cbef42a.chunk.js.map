{"version":3,"sources":["images/trivia-image.jpg","images/question.svg","images/error.svg","pages/Home.js","pages/Questions.js","pages/Error.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","MyVerticallyCenteredModal","props","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","Body","Container","Row","Col","xs","md","Button","variant","as","Link","to","Footer","onClick","onHide","React","useState","modalShow","setModalShow","Jumbotron","style","padding","marginBottom","src","triviaImg","width","alt","show","Questions","questionFormat","index","question","incorrect_answers","correct_answer","all","shuffle","Card","margin","Text","he","decode","setScore","score","setIndex","title","setTitle","questions","setQuestions","answers","setAnswers","error","setError","getQuestions","a","axios","get","match","params","response","data","results","length","undefined","category","i","console","log","useEffect","className","marginTop","grade","finalScore","map","Alert","key","huh","href","Error","textAlign","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,oQCK5B,SAASC,IACtB,SAASC,EAA0BC,GACjC,OACE,kBAACC,EAAA,EAAD,iBACMD,EADN,CAEEE,KAAK,KACLC,kBAAgB,gCAChBC,UAAQ,IAER,kBAACH,EAAA,EAAMI,OAAP,CAAcC,aAAW,GACvB,kBAACL,EAAA,EAAMM,MAAP,CAAaC,GAAG,iCAAhB,4CAIF,kBAACP,EAAA,EAAMQ,KAAP,KACE,0CACA,0FACA,6BACA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CACEC,QAAQ,iCACRC,GAAIC,IACJC,GAAE,iCAHJ,qBAMU,KAEZ,kBAACP,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CACEC,QAAQ,iCACRC,GAAIC,IACJC,GAAE,uBAHJ,SAMU,KAEZ,kBAACP,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CACEC,QAAQ,iCACRC,GAAIC,IACJC,GAAE,sBAHJ,QAMU,KAEZ,kBAACP,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CACEC,QAAQ,iCACRC,GAAIC,IACJC,GAAE,uBAHJ,SAMU,KAEZ,kBAACP,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CACEC,QAAQ,iCACRC,GAAIC,IACJC,GAAE,4BAHJ,cAMU,KAEZ,kBAACP,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CACEC,QAAQ,iCACRC,GAAIC,IACJC,GAAE,4BAHJ,eAMU,KAEZ,kBAACP,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CACEC,QAAQ,iCACRC,GAAIC,IACJC,GAAE,+BAED,oBACO,KAEZ,kBAACP,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CACEC,QAAQ,iCACRC,GAAIC,IACJC,GAAE,2BAHJ,aAMU,KAEZ,kBAACP,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CACEC,QAAQ,iCACRC,GAAIC,IACJC,GAAE,6BAHJ,eAMU,KAEZ,kBAACP,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CACEC,QAAQ,iCACRC,GAAIC,IACJC,GAAE,2BAHJ,aAMU,KAEZ,kBAACP,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CACEC,QAAQ,iCACRC,GAAIC,IACJC,GAAE,wBAHJ,UAMU,KAEZ,kBAACP,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CACEC,QAAQ,iCACRC,GAAIC,IACJC,GAAE,yBAHJ,WAMU,KAEZ,kBAACP,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CACEC,QAAQ,iCACRC,GAAIC,IACJC,GAAE,qBAHJ,OAMU,KAEZ,kBAACP,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CACEC,QAAQ,iCACRC,GAAIC,IACJC,GAAE,yBAHJ,WAMU,KAEZ,kBAACP,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CACEC,QAAQ,iCACRC,GAAIC,IACJC,GAAE,wBAHJ,UAMU,KAEZ,kBAACP,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CACEC,QAAQ,iCACRC,GAAIC,IACJC,GAAE,+BAED,iBACO,KAEZ,kBAACP,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CACEC,QAAQ,iCACRC,GAAIC,IACJC,GAAE,0BAHJ,YAMU,QAKlB,kBAAClB,EAAA,EAAMmB,OAAP,KACE,kBAACL,EAAA,EAAD,CAAQM,QAASrB,EAAMsB,QAAvB,WAjLqB,MAuLKC,IAAMC,UAAS,GAvLpB,mBAuLtBC,EAvLsB,KAuLXC,EAvLW,KAyL7B,OACE,6BACE,kBAACC,EAAA,EAAD,CAAWC,MAAO,CAAEC,QAAS,IAAKC,aAAc,IAC9C,uDACA,6KAKA,2BACE,kBAACf,EAAA,EAAD,CAAQC,QAAQ,UAAUK,QAAS,kBAAMK,GAAa,KAAtD,eAKJ,yBAAKK,IAAKC,IAAWC,MAAM,OAAOC,IAAI,gBACtC,kBAACnC,EAAD,CACEoC,KAAMV,EACNH,OAAQ,kBAAMI,GAAa,O,2HCgBpBU,MAhNf,SAAmBpC,GACjB,SAASqC,EAAeC,EAAOC,EAAUC,EAAmBC,GAC1D,IAAMC,EAAMC,IAAQ,GAAD,mBAAKH,GAAL,CAAwBC,KAE3C,OACE,kBAACG,EAAA,EAAD,CAAMhB,MAAO,CAAEC,QAAS,GAAIgB,OAAQ,KAClC,kBAACD,EAAA,EAAKnC,KAAN,KACE,kBAACmC,EAAA,EAAKrC,MAAN,iBAAsB+B,GACtB,kBAACM,EAAA,EAAKE,KAAN,KAAYC,IAAGC,OAAOT,IACtB,kBAAC7B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CACEC,QAAQ,YACRY,MAAO,CAAEiB,OAAQ,EAAGZ,MAAO,QAC3BZ,QAAS,WACP4B,GAAS,SAACC,GAAD,4BAAeA,GAAf,CAAsBH,IAAGC,OAAON,EAAI,SAC7CS,GAAS,SAACb,GAAD,OAAWA,EAAQ,OAG7BS,IAAGC,OAAON,EAAI,KAEjB,kBAAC3B,EAAA,EAAD,CACEC,QAAQ,YACRY,MAAO,CAAEiB,OAAQ,EAAGZ,MAAO,QAC3BZ,QAAS,WACP4B,GAAS,SAACC,GAAD,4BAAeA,GAAf,CAAsBH,IAAGC,OAAON,EAAI,SAC7CS,GAAS,SAACb,GAAD,OAAWA,EAAQ,OAG7BS,IAAGC,OAAON,EAAI,MAGnB,kBAAC9B,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CACEC,QAAQ,YACRY,MAAO,CAAEiB,OAAQ,EAAGZ,MAAO,QAC3BZ,QAAS,WACP4B,GAAS,SAACC,GAAD,4BAAeA,GAAf,CAAsBH,IAAGC,OAAON,EAAI,SAC7CS,GAAS,SAACb,GAAD,OAAWA,EAAQ,OAG7BS,IAAGC,OAAON,EAAI,KAEjB,kBAAC3B,EAAA,EAAD,CACEC,QAAQ,YACRY,MAAO,CAAEiB,OAAQ,EAAGZ,MAAO,QAC3BZ,QAAS,WACP4B,GAAS,SAACC,GAAD,4BAAeA,GAAf,CAAsBH,IAAGC,OAAON,EAAI,SAC7CS,GAAS,SAACb,GAAD,OAAWA,EAAQ,OAG7BS,IAAGC,OAAON,EAAI,UApDP,MA8DEnB,IAAMC,WA9DR,mBA8DjB4B,EA9DiB,KA8DVC,EA9DU,OA+DE9B,IAAMC,SAAS,GA/DjB,mBA+DjBc,EA/DiB,KA+DVa,EA/DU,OAgEE5B,IAAMC,SAAS,IAhEjB,mBAgEjB0B,EAhEiB,KAgEVD,EAhEU,OAiEU1B,IAAMC,SAAS,IAjEzB,mBAiEjB8B,EAjEiB,KAiENC,EAjEM,OAkEMhC,IAAMC,SAAS,IAlErB,mBAkEjBgC,EAlEiB,KAkERC,EAlEQ,OAmEElC,IAAMC,WAnER,mBAmEjBkC,EAnEiB,KAmEVC,EAnEU,cAqETC,IArES,2EAqExB,gCAAAC,EAAA,sEACyBC,IAAMC,IAAN,yDAC6B/D,EAAMgE,MAAMC,OAAOzD,GADhD,mBADzB,aACQ0D,EADR,QAKeC,KAAKC,QAAQC,OAAS,GALrC,uBAMIV,EAAS,uDANb,0BAUE,GAAIO,EAASC,KAKX,IAJc,KAAVf,QAA0BkB,IAAVlB,GAClBC,EAASa,EAASC,KAAKC,QAAQ,GAAGG,UAFnB,WAKRC,GAEPf,GAAW,SAACD,GAAD,4BACNA,GADM,CAETT,IAAGC,OAAOkB,EAASC,KAAKC,QAAQI,GAAG/B,qBAIrCc,GAAa,SAACD,GAAD,4BACRA,GADQ,CAEXjB,EACEmC,EAAI,EACJN,EAASC,KAAKC,QAAQI,GAAGjC,SACzB2B,EAASC,KAAKC,QAAQI,GAAGhC,kBACzB0B,EAASC,KAAKC,QAAQI,GAAG/B,sBAdtB+B,EAAI,EAAGA,EAAIN,EAASC,KAAKC,QAAQC,OAAQG,IAAM,EAA/CA,QAqBTC,QAAQC,IAAI,uCApChB,4CArEwB,sBA2IxB,OALAnD,IAAMoD,WAAU,WACdf,MAEC,IAGD,yBAAKgB,UAAU,OACb,kBAACjD,EAAA,EAAD,KACE,6BACE,4BAAKyB,GACL,6JAIA,2BACE,kBAACrC,EAAA,EAAD,CAAQC,QAAQ,UAAUC,GAAIC,IAAMC,GAAG,KAAvC,mBAMN,6BACA,kBAACT,EAAA,EAAD,KACG4C,EAAUhB,GACX,yBAAKV,MAAO,CAAEiD,UAAW,IAAMD,UAAU,sBACtCtC,IAAUgB,EAAUe,QAA+B,IAArBf,EAAUe,OACvC,kBAACzB,EAAA,EAAD,CAAMhB,MAAO,CAAEC,QAAS,GAAIgB,OAAQ,KAClC,kBAACD,EAAA,EAAKnC,KAAN,KACE,kBAACmC,EAAA,EAAKrC,MAAN,oCACA,kBAACqC,EAAA,EAAKE,KAAN,KACE,gDAvDhB,WAGE,IAFA,IAAIgC,EAAQ,EAEHN,EAAI,EAAGA,EAAItB,EAAMmB,OAAQG,IAC5BtB,EAAMsB,KAAOhB,EAAQgB,IACvBM,IAIJ,MAAM,GAAN,OAAUA,EAAV,cA8CoCC,IACtB,6BACC7B,EAAM8B,KAAI,SAAC9B,EAAOsB,GAAR,OACT,kBAACS,EAAA,EAAD,CACEC,IAAKV,EACLxD,QAASkC,IAAUM,EAAQgB,GAAK,UAAY,UAE3CtB,IAAUM,EAAQgB,GACftB,EADH,uBAEmBA,EAFnB,sCAEsDM,EAAQgB,SAIrE,kBAAC9D,EAAA,EAAD,KACE,6BACA,kBAACK,EAAA,EAAD,CAAQC,QAAQ,UAAUK,QA1D1C,WAEEkC,EAAa,IACbE,EAAW,IACXR,EAAS,IAGTE,EAAS,GAGTS,MAgDc,iBAMJ,WAGKU,IAAVZ,EACC,oCACE,4BAAKA,GACL,yBAAK3B,IAAKoD,IAAKjD,IAAI,QACnB,uBAAGN,MAAO,CAAEE,aAAc,IAA1B,gBACA,uBAAGsD,KAAK,2CAA2ChC,MAAM,WAAzD,WAGA,uBAAGxB,MAAO,CAAEE,aAAc,IAA1B,QAAwC,IACxC,uBAAGsD,KAAK,4BAA4BhC,MAAM,YACvC,IADH,qBAKA,Q,iBCvNG,SAASiC,IACtB,OACE,yBAAKzD,MAAO,CAAE0D,UAAW,SAAUT,UAAW,MAC5C,yBAAK9C,IAAK2B,IAAOxB,IAAI,QACrB,uBAAGN,MAAO,CAAEE,aAAc,IAA1B,gBACA,uBAAGsD,KAAK,2CAA2ChC,MAAM,WAAzD,WAGA,uBAAGxB,MAAO,CAAEE,aAAc,IAA1B,QAAwC,IACxC,uBAAGsD,KAAK,4BAA4BhC,MAAM,YACvC,IADH,qBCOSmC,MAZf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW5F,IACjC,kBAAC,IAAD,CAAO0F,OAAK,EAACC,KAAK,2BAA2BC,UAAWtD,IACxD,kBAAC,IAAD,CAAOsD,UAAWL,OCDNM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9B,MACvB,2D,MCXN+B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAhD,GACLe,QAAQf,MAAMA,EAAMiD,c","file":"static/js/main.8cbef42a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/trivia-image.c3fc9fc3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/question.462972c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.7a3fb46e.svg\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Jumbotron, Button, Modal, Container, Row, Col } from \"react-bootstrap\";\nimport triviaImg from \"../images/trivia-image.jpg\";\n\nexport default function Home() {\n  function MyVerticallyCenteredModal(props) {\n    return (\n      <Modal\n        {...props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            Choose from one of the categories below\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <h4>Categories</h4>\n          <p>Each category has over 100+ questions and are addded daily.</p>\n          <br />\n          <Container>\n            <Row>\n              <Col xs={6} md={4}>\n                <Button\n                  variant=\"outline-primary btn-block mb-1\"\n                  as={Link}\n                  to={`/questions/generalknowledge/9`}\n                >\n                  General Knowledge\n                </Button>{\" \"}\n              </Col>\n              <Col xs={6} md={4}>\n                <Button\n                  variant=\"outline-primary btn-block mb-1\"\n                  as={Link}\n                  to={`/questions/books/10`}\n                >\n                  Books\n                </Button>{\" \"}\n              </Col>\n              <Col xs={6} md={4}>\n                <Button\n                  variant=\"outline-primary btn-block mb-1\"\n                  as={Link}\n                  to={`/questions/film/11`}\n                >\n                  Film\n                </Button>{\" \"}\n              </Col>\n              <Col xs={6} md={4}>\n                <Button\n                  variant=\"outline-primary btn-block mb-1\"\n                  as={Link}\n                  to={`/questions/music/12`}\n                >\n                  Music\n                </Button>{\" \"}\n              </Col>\n              <Col xs={6} md={4}>\n                <Button\n                  variant=\"outline-primary btn-block mb-1\"\n                  as={Link}\n                  to={`/questions/television/14`}\n                >\n                  Television\n                </Button>{\" \"}\n              </Col>\n              <Col xs={6} md={4}>\n                <Button\n                  variant=\"outline-primary btn-block mb-1\"\n                  as={Link}\n                  to={`/questions/videogames/15`}\n                >\n                  Video Games\n                </Button>{\" \"}\n              </Col>\n              <Col xs={6} md={4}>\n                <Button\n                  variant=\"outline-primary btn-block mb-1\"\n                  as={Link}\n                  to={`/questions/sciencenature/17`}\n                >\n                  {\"Science & Nature\"}\n                </Button>{\" \"}\n              </Col>\n              <Col xs={6} md={4}>\n                <Button\n                  variant=\"outline-primary btn-block mb-1\"\n                  as={Link}\n                  to={`/questions/computers/18`}\n                >\n                  Computers\n                </Button>{\" \"}\n              </Col>\n              <Col xs={6} md={4}>\n                <Button\n                  variant=\"outline-primary btn-block mb-1\"\n                  as={Link}\n                  to={`/questions/mathematics/19`}\n                >\n                  Mathematics\n                </Button>{\" \"}\n              </Col>\n              <Col xs={6} md={4}>\n                <Button\n                  variant=\"outline-primary btn-block mb-1\"\n                  as={Link}\n                  to={`/questions/mythology/20`}\n                >\n                  Mythology\n                </Button>{\" \"}\n              </Col>\n              <Col xs={6} md={4}>\n                <Button\n                  variant=\"outline-primary btn-block mb-1\"\n                  as={Link}\n                  to={`/questions/sports/21`}\n                >\n                  Sports\n                </Button>{\" \"}\n              </Col>\n              <Col xs={6} md={4}>\n                <Button\n                  variant=\"outline-primary btn-block mb-1\"\n                  as={Link}\n                  to={`/questions/history/23`}\n                >\n                  History\n                </Button>{\" \"}\n              </Col>\n              <Col xs={6} md={4}>\n                <Button\n                  variant=\"outline-primary btn-block mb-1\"\n                  as={Link}\n                  to={`/questions/art/25`}\n                >\n                  Art\n                </Button>{\" \"}\n              </Col>\n              <Col xs={6} md={4}>\n                <Button\n                  variant=\"outline-primary btn-block mb-1\"\n                  as={Link}\n                  to={`/questions/animals/27`}\n                >\n                  Animals\n                </Button>{\" \"}\n              </Col>\n              <Col xs={6} md={4}>\n                <Button\n                  variant=\"outline-primary btn-block mb-1\"\n                  as={Link}\n                  to={`/questions/comics/29`}\n                >\n                  Comics\n                </Button>{\" \"}\n              </Col>\n              <Col xs={6} md={4}>\n                <Button\n                  variant=\"outline-primary btn-block mb-1\"\n                  as={Link}\n                  to={`/questions/animeandmanga/31`}\n                >\n                  {\"Anime & Manga\"}\n                </Button>{\" \"}\n              </Col>\n              <Col xs={6} md={4}>\n                <Button\n                  variant=\"outline-primary btn-block mb-1\"\n                  as={Link}\n                  to={`/questions/cartoons/32`}\n                >\n                  Cartoons\n                </Button>{\" \"}\n              </Col>\n            </Row>\n          </Container>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n\n  const [modalShow, setModalShow] = React.useState(false);\n\n  return (\n    <div>\n      <Jumbotron style={{ padding: 100, marginBottom: 0 }}>\n        <h1>Welcome To Easy Trivia!</h1>\n        <p>\n          Good with random trivia questions? Take some here for fun. We ask 10\n          questions about the category you choose, come take a look, they are\n          easy.\n        </p>\n        <p>\n          <Button variant=\"primary\" onClick={() => setModalShow(true)}>\n            Start Now\n          </Button>\n        </p>\n      </Jumbotron>\n      <img src={triviaImg} width=\"100%\" alt=\"trivia logo\" />\n      <MyVerticallyCenteredModal\n        show={modalShow}\n        onHide={() => setModalShow(false)}\n      />\n    </div>\n  );\n}\n","import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport shuffle from \"shuffle-array\";\nimport he from \"he\";\nimport huh from \"../images/question.svg\";\nimport {\n  Jumbotron,\n  Button,\n  Container,\n  Row,\n  Col,\n  Card,\n  Alert,\n} from \"react-bootstrap\";\n\nfunction Questions(props) {\n  function questionFormat(index, question, incorrect_answers, correct_answer) {\n    const all = shuffle([...incorrect_answers, correct_answer]);\n\n    return (\n      <Card style={{ padding: 20, margin: 10 }}>\n        <Card.Body>\n          <Card.Title>Question {index}</Card.Title>\n          <Card.Text>{he.decode(question)}</Card.Text>\n          <Container>\n            <Row>\n              <Col>\n                <Button\n                  variant=\"secondary\"\n                  style={{ margin: 5, width: \"100%\" }}\n                  onClick={() => {\n                    setScore((score) => [...score, he.decode(all[0])]);\n                    setIndex((index) => index + 1);\n                  }}\n                >\n                  {he.decode(all[0])}\n                </Button>\n                <Button\n                  variant=\"secondary\"\n                  style={{ margin: 5, width: \"100%\" }}\n                  onClick={() => {\n                    setScore((score) => [...score, he.decode(all[1])]);\n                    setIndex((index) => index + 1);\n                  }}\n                >\n                  {he.decode(all[1])}\n                </Button>\n              </Col>\n              <Col>\n                <Button\n                  variant=\"secondary\"\n                  style={{ margin: 5, width: \"100%\" }}\n                  onClick={() => {\n                    setScore((score) => [...score, he.decode(all[2])]);\n                    setIndex((index) => index + 1);\n                  }}\n                >\n                  {he.decode(all[2])}\n                </Button>\n                <Button\n                  variant=\"secondary\"\n                  style={{ margin: 5, width: \"100%\" }}\n                  onClick={() => {\n                    setScore((score) => [...score, he.decode(all[3])]);\n                    setIndex((index) => index + 1);\n                  }}\n                >\n                  {he.decode(all[3])}\n                </Button>\n              </Col>\n            </Row>\n          </Container>\n        </Card.Body>\n      </Card>\n    );\n  }\n\n  const [title, setTitle] = React.useState();\n  const [index, setIndex] = React.useState(0);\n  const [score, setScore] = React.useState([]);\n  const [questions, setQuestions] = React.useState([]);\n  const [answers, setAnswers] = React.useState([]);\n  const [error, setError] = React.useState();\n\n  async function getQuestions() {\n    const response = await axios.get(\n      `https://opentdb.com/api.php?amount=10&category=${props.match.params.id}&type=multiple`\n    );\n\n    if (response.data.results.length < 1) {\n      setError(\"Sorry we cannot find that category on the server...\");\n      return;\n    }\n\n    if (response.data) {\n      if (title === \"\" || title === undefined) {\n        setTitle(response.data.results[0].category);\n      }\n\n      for (let i = 0; i < response.data.results.length; i++) {\n        // add answer\n        setAnswers((answers) => [\n          ...answers,\n          he.decode(response.data.results[i].correct_answer),\n        ]);\n\n        // set questions/answers in cards\n        setQuestions((questions) => [\n          ...questions,\n          questionFormat(\n            i + 1,\n            response.data.results[i].question,\n            response.data.results[i].incorrect_answers,\n            response.data.results[i].correct_answer\n          ),\n        ]);\n      }\n\n      //   setQuestions(response.data.results);\n    } else {\n      console.log(\"error getting questions from api...\");\n    }\n  }\n\n  function finalScore() {\n    var grade = 0;\n\n    for (var i = 0; i < score.length; i++) {\n      if (score[i] === answers[i]) {\n        grade++;\n      }\n    }\n\n    return `${grade} out of 10`;\n  }\n\n  function restart() {\n    // clear questions, answers and score\n    setQuestions([]);\n    setAnswers([]);\n    setScore([]);\n\n    // restart index\n    setIndex(0);\n\n    // call axios for new set of questions\n    getQuestions();\n  }\n\n  React.useEffect(() => {\n    getQuestions();\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Jumbotron>\n        <div>\n          <h1>{title}</h1>\n          <p>\n            This is a simple hero unit, a simple jumbotron-style component for\n            calling extra attention to featured content or information.\n          </p>\n          <p>\n            <Button variant=\"primary\" as={Link} to=\"/\">\n              Go Back Home\n            </Button>\n          </p>\n        </div>\n      </Jumbotron>\n      <br />\n      <Container>\n        {questions[index]}\n        <div style={{ marginTop: 25 }} className=\"final-card mx-auto\">\n          {index === questions.length && questions.length !== 0 ? (\n            <Card style={{ padding: 20, margin: 10 }}>\n              <Card.Body>\n                <Card.Title>You have finished the game!</Card.Title>\n                <Card.Text>\n                  <p>Your final score: {finalScore()}</p>\n                  <br />\n                  {score.map((score, i) => (\n                    <Alert\n                      key={i}\n                      variant={score === answers[i] ? \"success\" : \"danger\"}\n                    >\n                      {score === answers[i]\n                        ? score\n                        : `You answered ${score}, but he correct answer is ${answers[i]}`}\n                    </Alert>\n                  ))}\n                </Card.Text>\n                <Container>\n                  <br />\n                  <Button variant=\"primary\" onClick={restart}>\n                    Try Again?\n                  </Button>\n                </Container>\n              </Card.Body>\n            </Card>\n          ) : null}\n        </div>\n\n        {error !== undefined ? (\n          <>\n            <h3>{error}</h3>\n            <img src={huh} alt=\"huh\" />\n            <p style={{ marginBottom: 0 }}>Icon made by</p>\n            <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">\n              Freepik\n            </a>\n            <p style={{ marginBottom: 0 }}>from</p>{\" \"}\n            <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n              {\" \"}\n              www.flaticon.com\n            </a>\n          </>\n        ) : null}\n      </Container>\n    </div>\n  );\n}\n\nexport default Questions;\n","import React from \"react\";\nimport error from \"../images/error.svg\";\n\nexport default function Error() {\n  return (\n    <div style={{ textAlign: \"center\", marginTop: 100 }}>\n      <img src={error} alt=\"404\" />\n      <p style={{ marginBottom: 0 }}>Icon made by</p>\n      <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">\n        Freepik\n      </a>\n      <p style={{ marginBottom: 0 }}>from</p>{\" \"}\n      <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\n        {\" \"}\n        www.flaticon.com\n      </a>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Switch, Route, BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./pages/Home\";\nimport Questions from \"./pages/Questions\";\nimport Error from \"./pages/Error\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/questions/:category/:id\" component={Questions} />\n        <Route component={Error} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}